<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Multi-agent on Arno's Blog</title><link>https://umpire2018.github.io/tags/multi-agent/</link><description>Recent content in Multi-agent on Arno's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Tue, 19 Sep 2023 14:39:02 +0800</lastBuildDate><atom:link href="https://umpire2018.github.io/tags/multi-agent/index.xml" rel="self" type="application/rss+xml"/><item><title>Agentverse</title><link>https://umpire2018.github.io/p/agentverse/</link><pubDate>Tue, 19 Sep 2023 14:39:02 +0800</pubDate><guid>https://umpire2018.github.io/p/agentverse/</guid><description>&lt;img src="https://umpire2018.github.io/p/agentverse/cover.png" alt="Featured image of post Agentverse" />&lt;p>AgentVerse 提供了一个多功能的框架，简化了为大型语言模型（LLMs）创建自定义多智能体环境的过程。旨在快速、低成本的开发和定制，我们的框架赋能研究人员专注于他们的研究，而不被实现细节所困扰。&lt;/p>
&lt;blockquote>
&lt;p>原文链接： &lt;a class="link" href="https://github.com/OpenBMB/AgentVerse/tree/main" target="_blank" rel="noopener"
>OpenBMB/AgentVerse&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="-特点">✨ 特点&lt;/h2>
&lt;ul>
&lt;li>🥳 &lt;strong>高效的环境构建:&lt;/strong> 我们的框架提供了一系列基础构建模块，轻松创建多智能体环境。只需在配置文件中写入几行，你就可以轻松建立如LLMs的聊天室这样的基础环境。这个过程包括为LLMs定义环境的设置和提示，使像你这样的研究者能够专注于实验和分析。&lt;/li>
&lt;li>⚙️ &lt;strong>可定制组件&lt;/strong>: AgentVerse通过将多智能体环境分为五个功能模块并定义其各自的接口来简化它。对于不能直接使用AgentVerse提供的基本模块构建的复杂环境，你可以定制这五个功能模块中的一个或多个接口，根据你的要求高效地创建自己的多智能体环境。&lt;/li>
&lt;li>🛠 &lt;strong>工具(插件)利用&lt;/strong>: AgentVerse支持多智能体环境的工具。目前，AgentVerse支持&lt;a class="link" href="https://github.com/OpenBMB/BMTools" target="_blank" rel="noopener"
>BMTools&lt;/a>中提供的工具。&lt;/li>
&lt;/ul>
&lt;h2 id="-最新消息">📰 最新消息&lt;/h2>
&lt;ul>
&lt;li>[2023/8/22] 📝 我们很高兴分享与此仓库相关的正在进行中的论文 &lt;a class="link" href="https://arxiv.org/abs/2308.10848" target="_blank" rel="noopener"
>AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors in Agents&lt;/a>.&lt;/li>
&lt;li>[2023/6/5] 🎉 我们很荣幸地展示了一系列 &lt;a class="link" href="#-simple-demo-video" >demos&lt;/a>, 包括 &lt;a class="link" href="#nlp%e6%95%99%e5%ae%a4" >NLP教室&lt;/a>, &lt;a class="link" href="#%e5%9b%9a%e5%be%92%e5%9b%b0%e5%a2%83" >囚徒困境&lt;/a>, &lt;a class="link" href="#%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91" >软件开发&lt;/a>, &lt;a class="link" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%90%e7%bb%b4" >数据库运维&lt;/a>, 以及一个简单的 &lt;a class="link" href="#%e5%ae%9d%e5%8f%af%e6%a2%a6%e6%b8%b8%e6%88%8f" >H5宝可梦游戏&lt;/a> 该游戏允许与宝可梦中的角色互动！你可以试玩这些demo，祝你玩得开心！&lt;/li>
&lt;li>[2023/5/1] 🚀 &lt;a class="link" href="https://github.com/OpenBMB/AgentVerse" target="_blank" rel="noopener"
>AgentVerse&lt;/a> 正式发布！&lt;/li>
&lt;/ul>
&lt;h2 id="演示">演示&lt;/h2>
&lt;h3 id="流程">流程&lt;/h3>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/11704492/264917097-6db1c907-b7fc-42f9-946c-89853a28f386.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="视频">视频&lt;/h3>
&lt;h4 id="nlp教室">NLP教室&lt;/h4>
&lt;p>在NLP课堂中，教授和学生进行互动交流。当学生有问题时，他们会举手并耐心等待教授指名。只有在教授点名后，学生才能发言并提问。
使用以下命令启动NLP教室示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python main_demo.py --task nlp_classroom_9players
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="video-wrapper">
&lt;video
controls
src="https://github.com/OpenBMB/AgentVerse/assets/11704492/6ea07850-595e-4a28-a82e-f863011353c2"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="https://github.com/OpenBMB/AgentVerse/assets/11704492/6ea07850-595e-4a28-a82e-f863011353c2">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;h4 id="囚徒困境">囚徒困境&lt;/h4>
&lt;p>囚徒的困境是一个思考实验，它挑战两个完全理性的智能体面临的困境：他们可以与伙伴合作以获得互利，或背叛伙伴（&amp;ldquo;违背&amp;rdquo;）以获得个人奖励。
使用以下命令启动NLP教室示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python main_demo.py --task prisoner_dilemma
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="video-wrapper">
&lt;video
controls
src="https://github.com/OpenBMB/AgentVerse/assets/11704492/017c46e5-c738-4fca-9352-b008e2d518bd"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="https://github.com/OpenBMB/AgentVerse/assets/11704492/017c46e5-c738-4fca-9352-b008e2d518bd">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;h4 id="软件开发">软件开发&lt;/h4>
&lt;p>在软件设计示例中，代码编写者、代码测试者和代码审查者在代码生成问题上进行合作。给定一个问题，代码编写者首先撰写代码实现。代码测试者运行单元测试并提供反馈。然后，代码审查者生成评审。在收集了测试反馈和审查后，代码编写者迭代地优化代码。
使用以下命令启动软件设计示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python main_demo.py --task sde_team/sde_team_2players
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="video-wrapper">
&lt;video
controls
src="https://github.com/OpenBMB/AgentVerse/assets/11704492/5058066a-abee-490d-8659-b4e54661626a"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="https://github.com/OpenBMB/AgentVerse/assets/11704492/5058066a-abee-490d-8659-b4e54661626a">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;h4 id="数据库运维httpsgithubcomzhouxh19agentverse_for_database_diagnosis">&lt;a class="link" href="https://github.com/zhouxh19/AgentVerse_for_Database_Diagnosis" target="_blank" rel="noopener"
>数据库运维&lt;/a>&lt;/h4>
&lt;p>在数据库诊断场景中，首席DBA监控数据库系统以查找异常。如果检测到，会提醒内存和CPU智能体进行根源分析并建议优化解决方案。然后，首席DBA向用户提供总结的诊断，用户也可以通过给予指导或评估所提议解决方案的有效性来作出贡献。
首先，您应该在BMTools中配置&lt;a class="link" href="https://github.com/OpenBMB/BMTools/blob/main/bmtools/tools/db_diag/readme.md" target="_blank" rel="noopener"
>数据库工具&lt;/a>, 并根据&lt;a class="link" href="https://github.com/OpenBMB/BMTools/tree/main#211-local-tools" target="_blank" rel="noopener"
>指南&lt;/a>启动BMTools服务器。然后使用以下命令启动数据库管理员示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python main_demo.py --task db_diag
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="video-wrapper">
&lt;video
controls
src="https://user-images.githubusercontent.com/11704492/242840683-c633419d-afbb-47d4-bb12-6bb512e7af3a.mp4"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="https://user-images.githubusercontent.com/11704492/242840683-c633419d-afbb-47d4-bb12-6bb512e7af3a.mp4">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;h4 id="文本评估-chatevalhttpsgithubcomchanchiminchateval">&lt;a class="link" href="https://github.com/chanchimin/ChatEval" target="_blank" rel="noopener"
>文本评估 (ChatEval)&lt;/a>&lt;/h4>
&lt;p>在文本评估场景的背景下，我们建议用户探索&lt;a class="link" href="https://github.com/chanchimin/ChatEval" target="_blank" rel="noopener"
>ChatEval&lt;/a>仓库。他们在AgentVerse上实现了一个多智能体裁判团来评估不同模型生成的文本质量。给定两个不同的文本，ChatEval中的角色可以自主地辩论其细微差别，并根据分配给他们的人物特点提供其判断。实验表明，他们的裁判团，根据&lt;a class="link" href="#2-configuring-the-agents" >config.yaml&lt;/a>中规定的多样角色，与人类的评估更为接近。这个演示是基于&lt;a class="link" href="https://github.com/lm-sys/FastChat" target="_blank" rel="noopener"
>Fastchat&lt;/a>仓库构建的，我们想对他们的基础工作表示感谢。
&lt;div class="video-wrapper">
&lt;video
controls
src="https://github.com/OpenBMB/AgentVerse/assets/75533759/58f33468-f15b-4bac-ae01-8d0780019f85"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="https://github.com/OpenBMB/AgentVerse/assets/75533759/58f33468-f15b-4bac-ae01-8d0780019f85">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;/p>
&lt;h4 id="宝可梦游戏">宝可梦游戏&lt;/h4>
&lt;p>在这个简易游戏中，NPC之间可以自主互动。作为玩家，你扮演一个角色，可以随时与其他NPC互动。在这一游戏中有6个宝可梦绿宝石版中出现的角色: &lt;a class="link" href="https://bulbapedia.bulbagarden.net/wiki/May_%28game%29" target="_blank" rel="noopener"
>May&lt;/a>, &lt;a class="link" href="https://bulbapedia.bulbagarden.net/wiki/Professor_Birch" target="_blank" rel="noopener"
>Professor Birch&lt;/a>, &lt;a class="link" href="https://bulbapedia.bulbagarden.net/wiki/Steven_Stone" target="_blank" rel="noopener"
>Steven Stone&lt;/a>, &lt;a class="link" href="https://bulbapedia.bulbagarden.net/wiki/Maxie" target="_blank" rel="noopener"
>Maxie&lt;/a>, &lt;a class="link" href="https://bulbapedia.bulbagarden.net/wiki/Archie" target="_blank" rel="noopener"
>Archie&lt;/a> 和&lt;a class="link" href="https://bulbapedia.bulbagarden.net/wiki/Mr._Stone" target="_blank" rel="noopener"
>Joseph&lt;/a>.
要启动宝可梦游戏，首先使用以下命令启动本地服务器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">uvicorn pokemon_server:app --reload --port &lt;span class="m">10002&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在项目的根路径中打开另一个终端并运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ui
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you do not have npm installed, you need to install it before running the following commands &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># We have tested on npm@9.6.4, node@20.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm run watch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>等待编译完成。祝你玩得开心！(使用WASD移动，SPACE键启动对话。)
&lt;a class="link" href="https://github.com/OpenBMB/AgentVerse/assets/11704492/4d07da68-f942-4205-b558-f155e95782e7" target="_blank" rel="noopener"
>示例&lt;/a>&lt;/p>
&lt;h2 id="-开始使用">🚀 开始使用&lt;/h2>
&lt;h3 id="安装">安装&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install -U agentverse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者您可以通过手动克隆最新的仓库来安装此包：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/OpenBMB/AgentVerse.git --depth &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> AgentVerse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一些用户报告在安装 &lt;code>gradio&lt;/code>所需的 &lt;code>orjson&lt;/code>时遇到问题。一个简单的解决方法是使用Anaconda来安装它：&lt;code>conda install -c conda-forge orjson&lt;/code>。
您还需要按如下方式导出您的OpenAI API密钥：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 导出你的OpenAI API密钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENAI_API_KEY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;your_api_key_here&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果您想使用BMTools提供的工具，您需要按如下方式安装BMTools：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone git+https://github.com/OpenBMB/BMTools.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BMTools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python setup.py develop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果您想使用 BMTools 提供的工具，您需要按以下方式安装 BMTools：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone git+https://github.com/OpenBMB/BMTools.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BMTools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install -rrequirements.txt python setup。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="命令行示例">命令行示例&lt;/h3>
&lt;p>您可以创建由我们提供的多智能体环境。以教室场景为例。在这个场景中，有九个智能体，一个扮演教授的角色，其他八个是学生。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python3 main.py --task nlp_classroom_9players
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="本地网站演示">本地网站演示&lt;/h3>
&lt;p>我们还为这个环境提供了一个本地网站的演示。您可以用以下命令启动它：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python3 main_demo.py --task nlp_classroom_9players
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>成功启动本地服务器后，您可以访问&lt;a class="link" href="http://127.0.0.1:7860/" target="_blank" rel="noopener"
>http://127.0.0.1:7860/&lt;/a> 查看教室环境。&lt;/p>
&lt;h2 id="-理念">💡 理念&lt;/h2>
&lt;h3 id="environment">Environment&lt;/h3>
&lt;p>我们框架的核心是环境，它在使研究人员能够在不同条件下研究智能体行为方面起着至关重要的作用。我们认为环境应该是灵活的和可扩展的，允许研究人员轻松地定制它以适应他们的需求。为了实现这一点，我们将环境抽象为五个规则组件，实现不同的环境实际上是实现不同的规则：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Describer（描述器）&lt;/strong>：此组件为每个智能体在每一轮提供环境的描述。您可以自定义描述器来定义他们的环境的具体要求，例如一个智能体可以与哪些智能体互动。&lt;/li>
&lt;li>&lt;strong>Order（顺序）&lt;/strong>：此组件定义智能体在环境中采取行动的顺序。您可以自定义顺序以反映智能体之间所需的交互。我们提供了几个基本的顺序选项，包括 &lt;code>random&lt;/code>（随机），&lt;code>sequential&lt;/code>（连续）和 &lt;code>concurrent&lt;/code>（所有智能体在每轮都采取行动）。&lt;/li>
&lt;li>&lt;strong>Selector（选择器）&lt;/strong>：此组件选择由智能体生成的有效消息。有时智能体可能生成无效的响应，选择器用于过滤出意外的结果。&lt;/li>
&lt;li>&lt;strong>Updater（更新器）&lt;/strong>：此组件更新每个智能体的记忆。在某些情况下，一个智能体生成的响应不应被所有智能体看到（例如，如果智能体在不同的房间里）。对于每个响应，更新器只更新可以看到它的智能体。&lt;/li>
&lt;li>&lt;strong>Visibility（可见性）&lt;/strong>：此组件维护每个智能体在环境变化中可以看到的智能体列表。例如，当一个智能体从一个房间移动到另一个房间时，每个智能体的可见智能体列表应由 &lt;code>visibility&lt;/code>更新。
通过将环境抽象为这五个组件，我们创建了一个高度灵活且可扩展的框架，使研究人员可以轻松地构建和定制自己的多智能体环境。&lt;/li>
&lt;/ul>
&lt;h3 id="智能体">智能体&lt;/h3>
&lt;p>另一个基本组件是智能体。目前我们提供了两种类型的智能体：&lt;strong>ConversationAgent（对话智能体）&lt;/strong> 和 &lt;strong>ToolAgent（工具智能体）&lt;/strong>。您还可以通过继承BaseAgent类来自定义自己的智能体。&lt;/p>
&lt;h2 id="-定制您自己的环境">✍️ 定制您自己的环境&lt;/h2>
&lt;p>我们在 &lt;code>agentverse/tasks&lt;/code>目录中提供了几个示例。要定制您的环境，您应该&lt;/p>
&lt;ol>
&lt;li>在 &lt;code>agentverse/tasks&lt;/code>中创建一个任务目录&lt;/li>
&lt;li>编写配置文件&lt;/li>
&lt;li>编写解析您智能体响应的输出解析器。&lt;/li>
&lt;li>在 &lt;code>agentverse/tasks/__init__.py&lt;/code>中添加您的解析器
我们将使用 &lt;code>agentverse/tasks/nlp_classroom_3players&lt;/code>中的一个简单示例来说明这个程序。&lt;/li>
&lt;/ol>
&lt;h3 id="一个简单的例子构建一个教室环境">一个简单的例子：构建一个教室环境&lt;/h3>
&lt;p>为了说明如何定制您的环境，我们将使用一个简单的示例来构建一个教室环境，其中一个智能体是教授，一个是学生，一个是助教。&lt;/p>
&lt;h4 id="1-创建任务目录并配置环境">1. 创建任务目录并配置环境&lt;/h4>
&lt;p>首先，我们需要创建一个任务目录并为环境编写我们的配置文件。在 &lt;code>agentverse/tasks&lt;/code>目录中，创建一个新目录，名为 &lt;code>nlp_classroom_3players&lt;/code>。在此目录中，创建一个 &lt;code>config.yaml&lt;/code>文件并写入以下配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># config.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">basic # 使用AgentVerse中提供的基本环境&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max_turns&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定对话的最大轮数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rule&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">order&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sequential # 使用连续的顺序&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">visibility&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all # 每条消息都可以被所有智能体看到&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">basic # 基本选择器（不选择）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">updater&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">basic # 基本更新器（将消息更新给所有智能体）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">describer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">basic # 基本描述器（无描述）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个配置指定我们将使用AgentVerse中提供的基本环境，对话的最大轮数为10。我们将使用连续的顺序，所有消息对所有智能体都是可见的。我们不使用任何选择器，我们的更新器会将消息更新给所有的智能体，而我们的描述器不会提供任何描述。&lt;/p>
&lt;h4 id="2-配置智能体">2. 配置智能体&lt;/h4>
&lt;p>接下来，我们将配置智能体。在 &lt;code>config.yaml&lt;/code>文件中，我们将为每个智能体添加配置。以下是教授的示例配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># config.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">agents&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>-&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">agent_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">conversation&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Professor Micheal # 智能体的名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role_description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">You are Prof. Micheal, ... # 智能体的描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">memory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">memory_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">chat_history # 将存储所有的聊天记录&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*professor_prompt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">llm&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">llm_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">text-davinci-003 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将使用OpenAICompletion LLM&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">model&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">text-davinci-003 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 传递给api调用的参数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">temperature&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.7&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max_tokens&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">250&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在此示例中，我们将使用 &lt;code>conversation&lt;/code>智能体类型。我们为智能体指定了一个名称和描述，并将聊天记录存储在内存中。我们还提供了一个带有占位符的提示模板，这些占位符标记为${placeholder}。这些将由智能体的 &lt;code>_fill_prompt_template&lt;/code>方法实例化。&lt;/p>
&lt;h4 id="3-编写一个输出解析器">3. 编写一个输出解析器&lt;/h4>
&lt;p>下一步是为您的智能体的响应编写一个简单的解析器。因为您可能已经在您的提示模板中指定了输出格式，所以您需要提供一个相应的解析器。在此示例中，我们在我们的提示模板中通知模型以以下格式输出&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Action: Speak
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Action Input: (the content)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code> 动作：说出动作输入：（内容）&lt;/code>
我们将编写一个解析器来从智能体的响应中提取内容。有关更多详细信息，请参考代码。我们使用 &lt;code>@output_parser_registry.register('classroom_parser')&lt;/code>修饰我们的解析器函数，以将其注册到我们的框架中。最后，我们在 &lt;code>agentverse/tasks/__init__.py&lt;/code>中导入我们的解析器。
通过这些步骤，我们已经成功地构建了一个简单的教室环境，并根据我们的需求进行了定制。&lt;/p>
&lt;h3 id="更复杂环境的定制指南">更复杂环境的定制指南&lt;/h3>
&lt;p>虽然我们提供了一个基本框架来构建环境，使用我们的五个规则组件，但更复杂的环境可能需要进一步的定制。详细的文档和教程即将推出。在此，我们简要介绍如何定制您的环境的一些步骤：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>定制五个规则组件&lt;/strong>。每个规则组件都有一个接口，允许您根据特定的需求定制其行为。需要注意的是，这些组件并不一定是独立的，可以通过环境中的 &lt;code>rule_params&lt;/code>字典进行交互。您可以创建自己的规则组件，并与现有的组件集成，以构建智能体之间更复杂的交互。&lt;/li>
&lt;li>&lt;strong>定制环境本身&lt;/strong>。我们的 &lt;code>basic&lt;/code>环境为五个规则组件提供了一个默认的执行顺序，适合大多数情况，但您可以继承 &lt;code>BaseEnvironment&lt;/code>类并编写自己的 &lt;code>run&lt;/code>方法来实现更复杂的执行顺序。&lt;/li>
&lt;li>&lt;strong>定制智能体&lt;/strong>。根据您的特定用例，您可能还需要继承 &lt;code>BaseAgent&lt;/code>类。例如，您可能希望使用您的本地LLM作为智能体，或创建具有专门知识或技能的智能体。&lt;/li>
&lt;/ol>
&lt;h2 id="-示例">🔎 示例&lt;/h2>
&lt;p>目前，我们在 &lt;code>agentverse/tasks&lt;/code>目录中提供了一些简单的示例，每个示例都展示了我们框架的不同可能性。尽管这些示例的性能可能由于有限的提示工程而不是最佳的，但它们旨在展示我们框架的能力，例如允许使用工具。
以下是每个示例的简要概述：&lt;/p>
&lt;ol>
&lt;li>&lt;code>nlp_classroom_3players&lt;/code>：此示例说明了智能体将按顺序交谈的简单情况。&lt;/li>
&lt;li>&lt;code>nlp_classroom_9players&lt;/code>：这是一个NLP课堂示例。在这里，学生们可以在有问题时举手，教授可以叫学生让他们提问。只有在被叫到之后，学生才被允许说话。&lt;/li>
&lt;li>&lt;code>nlp_classroom_9players_group&lt;/code>：此示例展示了小组讨论。必要时，教授可以发起小组讨论，学生们可以在讨论期间只与同一小组的同学交互。&lt;/li>
&lt;li>&lt;code>nlp_classroom_3players_withtool&lt;/code>：在这个课堂中，学生们在听课时可以使用Bing搜索API。&lt;/li>
&lt;li>&lt;code>math_problem_2players_tools&lt;/code>：一个简单的示例，展示了如何使用WolframAlpha API的两个智能体来玩算术游戏。&lt;/li>
&lt;li>&lt;code>prisoner_dilema&lt;/code>：囚犯困境是一个涉及两个理性智能体面临的思想实验，他们可以选择为相互利益而合作，或为个人利益而背叛伙伴。&lt;/li>
&lt;li>&lt;code>db_diag&lt;/code>：首席DBA（智能体）监控数据库系统中的异常，并在检测到任何异常时提醒内存和CPU智能体。他们（智能体）分析根本原因并建议优化解决方案。首席DBA（智能体）向用户提供诊断摘要，用户可以给出指示或评估所提议的解决方案的有效性。&lt;/li>
&lt;li>&lt;code>sde_team&lt;/code>：在SDE团队中，代码编写者、代码测试者和代码审查者在代码生成问题上进行合作。&lt;/li>
&lt;li>&lt;code>pokemon&lt;/code>：此示例模仿宝可梦游戏。&lt;/li>
&lt;/ol>
&lt;h2 id="citation">Citation&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript" data-lang="gdscript">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">misc&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">chen2023agentverse&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">AgentVerse&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Facilitating&lt;/span> &lt;span class="n">Multi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Agent&lt;/span> &lt;span class="n">Collaboration&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Exploring&lt;/span> &lt;span class="n">Emergent&lt;/span> &lt;span class="n">Behaviors&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Agents&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">Weize&lt;/span> &lt;span class="n">Chen&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Yusheng&lt;/span> &lt;span class="n">Su&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Jingwei&lt;/span> &lt;span class="n">Zuo&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Cheng&lt;/span> &lt;span class="n">Yang&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Chenfei&lt;/span> &lt;span class="n">Yuan&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Chen&lt;/span> &lt;span class="n">Qian&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Chi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Min&lt;/span> &lt;span class="n">Chan&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Yujia&lt;/span> &lt;span class="n">Qin&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Yaxi&lt;/span> &lt;span class="n">Lu&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Ruobing&lt;/span> &lt;span class="n">Xie&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Zhiyuan&lt;/span> &lt;span class="n">Liu&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Maosong&lt;/span> &lt;span class="n">Sun&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">Jie&lt;/span> &lt;span class="n">Zhou&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">year&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">2023&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">eprint&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mf">2308.10848&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">archivePrefix&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">arXiv&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">primaryClass&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">cs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CL&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>